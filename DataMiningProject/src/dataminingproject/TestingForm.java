/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dataminingproject;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;
import weka.classifiers.Classifier;
import weka.core.DenseInstance;
import weka.core.Instances;
import weka.core.converters.ConverterUtils.DataSource;
/**
 *
 * @author dali
 */
public class TestingForm extends javax.swing.JFrame {

    /**
     * Creates new form Testing
     */
    public TestingForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cb_country = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cb_age = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cb_gender = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        cb_ITyears = new javax.swing.JComboBox();
        cb_Occ = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        cb_empstat = new javax.swing.JComboBox();
        cb_industry = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ck_android = new javax.swing.JCheckBox();
        ck_Arduino = new javax.swing.JCheckBox();
        ck_angular = new javax.swing.JCheckBox();
        ck_c = new javax.swing.JCheckBox();
        ck_cpp = new javax.swing.JCheckBox();
        ck_cpp11 = new javax.swing.JCheckBox();
        ck_Fs = new javax.swing.JCheckBox();
        ck_dart = new javax.swing.JCheckBox();
        ck_cassandra = new javax.swing.JCheckBox();
        ck_coffeeScript = new javax.swing.JCheckBox();
        ck_Cordova = new javax.swing.JCheckBox();
        ck_Clojure = new javax.swing.JCheckBox();
        ck_java = new javax.swing.JCheckBox();
        ck_javaScript = new javax.swing.JCheckBox();
        ck_go = new javax.swing.JCheckBox();
        ck_hadoop = new javax.swing.JCheckBox();
        ck_haskell = new javax.swing.JCheckBox();
        ck_ios = new javax.swing.JCheckBox();
        ck_objective_c = new javax.swing.JCheckBox();
        ck_perl = new javax.swing.JCheckBox();
        ck_lamp = new javax.swing.JCheckBox();
        ck_matlab = new javax.swing.JCheckBox();
        ck_mongoDB = new javax.swing.JCheckBox();
        ck_nodejs = new javax.swing.JCheckBox();
        ck_ruby = new javax.swing.JCheckBox();
        ck_rust = new javax.swing.JCheckBox();
        ck_php = new javax.swing.JCheckBox();
        ck_python = new javax.swing.JCheckBox();
        ck_R = new javax.swing.JCheckBox();
        ck_redis = new javax.swing.JCheckBox();
        ck_sql = new javax.swing.JCheckBox();
        ck_sqlserver = new javax.swing.JCheckBox();
        ck_salesforce = new javax.swing.JCheckBox();
        ck_scala = new javax.swing.JCheckBox();
        ck_sharepoint = new javax.swing.JCheckBox();
        ck_spark = new javax.swing.JCheckBox();
        ck_cloud = new javax.swing.JCheckBox();
        ck_cs = new javax.swing.JCheckBox();
        ck_wordPress = new javax.swing.JCheckBox();
        ck_windowsPhone = new javax.swing.JCheckBox();
        ck_visualBasic = new javax.swing.JCheckBox();
        ck_swift = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        btn_run = new javax.swing.JButton();
        lblRes = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        btn_loadmdl = new javax.swing.JButton();
        lblModelName = new javax.swing.JLabel();
        btn_loaddata = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Data Mining Project");

        jLabel1.setText("Country");

        cb_country.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "?", "Croatia", "France", "India", "Latvia", "Norway", "United States", "Argentina", "Australia", "Belgium", "Brazil", "Canada", "China", "Denmark", "Egypt", "Finland", "Germany", "Indonesia", "Italy", "Mexico", "Netherlands", "New Zealand", "Peru", "Poland", "Portugal", "Russian Federation", "Spain", "Sweden", "Tunisia", "Turkey", "Ukraine", "United Kingdom", "Hungary", "Lithuania", "Myanmar- {Burma}", "Philippines", "United Arab Emirates", "Uruguay", "Singapore", "Austria", "Switzerland", "Belarus", "Bulgaria", "Colombia", "Georgia", "Greece", "Guatemala", "Iceland", "Iran", "Ireland {Republic}", "Israel", "Malaysia", "Nigeria", "Other", "Pakistan", "Romania", "Saudi Arabia", "Serbia", "Slovakia", "South Africa", "Ecuador", "Estonia", "Paraguay", "Slovenia", "Venezuela", "Czech Republic", "Kenya", "Bangladesh", "Dominican Republic", "Jamaica", "Japan", "Kazakhstan", "Sri Lanka", "Syria", "Taiwan", "Cyprus", "Korea South", "Moldova", "Thailand", "Morocco", "Vietnam", "Armenia", "Bolivia", "Bosnia Herzegovina", "Costa Rica", "Jordan", "Macedonia", "Malta", "Nepal", "Trinidad & Tobago", "Montenegro", "Chile", "Kyrgyzstan", "Mongolia", "Algeria", "Bhutan", "Cambodia", "Congo {Democratic Rep}", "Gabon", "Lebanon", "Nicaragua", "Swaziland", "Mauritius", "Antigua & Deps", "Laos", "Qatar", "Afghanistan", "Ethiopia", "El Salvador", "Bahrain", "Albania", "Uzbekistan", "Liechtenstein", "Mauritania", "San Marino", "Iraq", "Sudan", "Zimbabwe", "Uganda", "Ghana", "Honduras", "Tanzania", "Senegal", "Luxembourg", "Barbados", "Kuwait", "Panama", "Benin", "Botswana", "Azerbaijan", "Madagascar", "Zambia", "Cuba", "South Sudan", "Cameroon", "Solomon Islands", "Oman", "Kosovo", "Namibia", "Turkmenistan", "Somalia", "Mozambique", "Tajikistan", "Togo", "Andorra", "Sierra Leone", "Korea North", "Bahamas", "Maldives", "Rwanda", "Angola", "Vatican City", "Brunei", "Burkina", "Djibouti", "Haiti", "Vanuatu" }));
        cb_country.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel2.setText("Age");

        cb_age.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "?", "< 20", "20-24", "25-29", "30-34", "35-39", "40-50", "51-60", "> 60" }));
        cb_age.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel3.setText("Gender");

        cb_gender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "?", "Male", "Female" }));
        cb_gender.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel4.setText("Years Experience");

        cb_ITyears.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "?", "Less than 1 year", "1 - 2 years", "2 - 5 years", "6 - 10 years", "11+ years", " " }));
        cb_ITyears.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        cb_Occ.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "?", "Back-end web developer", "Business intelligence or data warehousing expert", "Data scientist", "Database administrator", "Designer", "Desktop developer", "Developer with a statistics or mathematics background", "DevOps", "Embedded application developer", "Enterprise level services developer", "Executive (VP of Eng.- CTO- CIO- etc.)", "Front-end web developer", "Full-stack web developer", "Graphics programmer", "Growth hacker", "Machine learning developer", "Mobile developer", "Mobile developer - Android", "Mobile developer - iOS", "Mobile developer - Windows Phone", "Product manager", "Quality Assurance", "Student", "System administrator" }));
        cb_Occ.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel5.setText("Occupation");

        cb_empstat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "?", "Employed full-time", "Freelance / Contractor", "Employed part-time", "Retired" }));
        cb_empstat.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        cb_industry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "?", "Aerospace", "Consulting", "Consumer Products", "Defense", "Education", "Finance / Banking", "Foundation / Non-Profit", "Gaming", "Government", "Healthcare", "Internet", "Manufacturing", "Media / Advertising", "Not Currently Employed", "Retail", "Software Products", "Telecommunications", "Web Services" }));
        cb_industry.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel6.setText("Industry");

        jLabel7.setText("Employment Status");

        ck_android.setText("Android");

        ck_Arduino.setText("Arduino");

        ck_angular.setText("AngularJS");

        ck_c.setText("C");

        ck_cpp.setText("C++");

        ck_cpp11.setText("C++11");

        ck_Fs.setText("F#");

        ck_dart.setText("Dart");

        ck_cassandra.setText("Cassandra");

        ck_coffeeScript.setText("CoffeeScript");

        ck_Cordova.setText("Cordova");

        ck_Clojure.setText("Clojure");

        ck_java.setText("Java");

        ck_javaScript.setText("JavaScript");

        ck_go.setText("Go");

        ck_hadoop.setText("Hadoop");

        ck_haskell.setText("Haskell");

        ck_ios.setText("iOS");

        ck_objective_c.setText("Objective-C");

        ck_perl.setText("Perl");

        ck_lamp.setText("LAMP");

        ck_matlab.setText("Matlab");

        ck_mongoDB.setText("MongoDB");

        ck_nodejs.setText("Node.js");

        ck_ruby.setText("Ruby");

        ck_rust.setText("Rust");

        ck_php.setText("PHP");

        ck_python.setText("Python");

        ck_R.setText("R");

        ck_redis.setText("Redis");

        ck_sql.setText("SQL");

        ck_sqlserver.setText("SQL Server");

        ck_salesforce.setText("Salesforce");

        ck_scala.setText("Scala");

        ck_sharepoint.setText("Sharepoint");

        ck_spark.setText("Spark");

        ck_cloud.setText("Cloud (AWS- GAE- Azure- etc.)");

        ck_cs.setText("C#");

        ck_wordPress.setText("Wordpress");

        ck_windowsPhone.setText("Windows Phone");

        ck_visualBasic.setText("Visual Basic");

        ck_swift.setText("Swift");

        btn_run.setText("Run");
        btn_run.setEnabled(false);
        btn_run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_runActionPerformed(evt);
            }
        });

        lblRes.setText("result:");

        jLabel10.setText("Skills:");

        btn_loadmdl.setText("Load Weka model");
        btn_loadmdl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loadmdlActionPerformed(evt);
            }
        });

        lblModelName.setText("model:");

        btn_loaddata.setText("data Set model");
        btn_loaddata.setEnabled(false);
        btn_loaddata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loaddataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cb_Occ, 0, 348, Short.MAX_VALUE)
                                    .addComponent(cb_ITyears, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cb_country, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cb_age, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cb_gender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cb_empstat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cb_industry, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_run, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(lblRes))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ck_cpp11)
                                    .addComponent(ck_cpp)
                                    .addComponent(ck_c)
                                    .addComponent(ck_angular)
                                    .addComponent(ck_Arduino)
                                    .addComponent(ck_android)
                                    .addComponent(ck_cs))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ck_wordPress)
                                    .addComponent(ck_dart)
                                    .addComponent(ck_Fs)
                                    .addComponent(ck_Clojure)
                                    .addComponent(ck_Cordova)
                                    .addComponent(ck_coffeeScript)
                                    .addComponent(ck_cassandra))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ck_windowsPhone)
                                    .addComponent(ck_javaScript)
                                    .addComponent(ck_java)
                                    .addComponent(ck_ios)
                                    .addComponent(ck_haskell)
                                    .addComponent(ck_hadoop)
                                    .addComponent(ck_go))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ck_visualBasic)
                                    .addComponent(ck_perl)
                                    .addComponent(ck_objective_c)
                                    .addComponent(ck_nodejs)
                                    .addComponent(ck_mongoDB)
                                    .addComponent(ck_matlab)
                                    .addComponent(ck_lamp))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ck_swift)
                                    .addComponent(ck_rust)
                                    .addComponent(ck_ruby)
                                    .addComponent(ck_redis)
                                    .addComponent(ck_R)
                                    .addComponent(ck_python)
                                    .addComponent(ck_php))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ck_cloud)
                                    .addComponent(ck_sqlserver)
                                    .addComponent(ck_sql)
                                    .addComponent(ck_spark)
                                    .addComponent(ck_sharepoint)
                                    .addComponent(ck_scala)
                                    .addComponent(ck_salesforce))))
                        .addContainerGap(38, Short.MAX_VALUE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_loadmdl)
                                .addGap(18, 18, 18)
                                .addComponent(lblModelName)
                                .addGap(172, 172, 172)
                                .addComponent(btn_loaddata))
                            .addComponent(jLabel10))
                        .addGap(0, 260, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_loadmdl)
                    .addComponent(lblModelName)
                    .addComponent(btn_loaddata))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cb_country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cb_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cb_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cb_ITyears, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cb_Occ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cb_empstat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cb_industry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ck_cassandra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ck_coffeeScript)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ck_Cordova)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ck_Clojure)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ck_Fs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ck_dart))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(ck_android)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ck_Arduino)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ck_angular)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ck_c)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ck_cpp)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ck_cpp11))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(ck_go)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ck_hadoop)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ck_haskell)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ck_ios)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ck_java)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ck_javaScript))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(ck_lamp)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ck_matlab)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ck_mongoDB)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ck_nodejs)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ck_objective_c)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(ck_perl)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ck_php)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ck_python)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ck_R)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ck_redis)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ck_ruby)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ck_rust))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ck_salesforce)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ck_scala)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ck_sharepoint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ck_spark)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ck_sql)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ck_sqlserver)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ck_cs)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ck_swift)
                        .addComponent(ck_cloud)
                        .addComponent(ck_visualBasic)
                        .addComponent(ck_windowsPhone)
                        .addComponent(ck_wordPress)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_run, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRes))
                .addContainerGap())
        );

        cb_country.getAccessibleContext().setAccessibleName("dd_country");
        cb_age.getAccessibleContext().setAccessibleName("dd_Age");
        cb_gender.getAccessibleContext().setAccessibleName("dd_Gender");
        cb_ITyears.getAccessibleContext().setAccessibleName("dd_years");
        cb_Occ.getAccessibleContext().setAccessibleName("dd_Occ");
        cb_empstat.getAccessibleContext().setAccessibleName("dd_empstate");
        cb_industry.getAccessibleContext().setAccessibleName("dd_industry");
        btn_run.getAccessibleContext().setAccessibleName("btn_run");
        btn_loadmdl.getAccessibleContext().setAccessibleName("btn_load");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String path=null;
    String dataPath=null;
    private void btn_loadmdlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loadmdlActionPerformed
        JFileChooser jFileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("WEKA MODEL", "model");
        jFileChooser.setFileFilter(filter);
        int result = jFileChooser.showOpenDialog(new JFrame());
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jFileChooser.getSelectedFile();
            path=selectedFile.getAbsolutePath();
            btn_loaddata.setEnabled(true);
            lblModelName.setText("model: "+selectedFile.getName());
        }


    }//GEN-LAST:event_btn_loadmdlActionPerformed

    private void btn_runActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_runActionPerformed
        try {
        
            
            Classifier cls = (Classifier) weka.core.SerializationHelper.read(path);
            
            DataSource source=new DataSource (dataPath);
            Instances data = source.getDataSet();
            data.setClassIndex(data.numAttributes() - 1);
            double[] attValues = new double[data.numAttributes()]; 
            
            
            
        String Country = cb_country.getSelectedItem().toString();//{Croatia,France,India,Latvia,Norway,'United States',Argentina,Australia,Belgium,Brazil,Canada,China,Denmark,Egypt,Finland,Germany,Indonesia,Italy,Mexico,Netherlands,'New Zealand',Peru,Poland,Portugal,'Russian Federation',Spain,Sweden,Tunisia,Turkey,Ukraine,'United Kingdom',Hungary,Lithuania,'Myanmar- {Burma}',Philippines,'United Arab Emirates',Uruguay,Singapore,Austria,Switzerland,Belarus,Bulgaria,Colombia,Georgia,Greece,Guatemala,Iceland,Iran,'Ireland {Republic}',Israel,Malaysia,Nigeria,Other,Pakistan,Romania,'Saudi Arabia',Serbia,Slovakia,'South Africa',Ecuador,Estonia,Paraguay,Slovenia,Venezuela,'Czech Republic',Kenya,Bangladesh,'Dominican Republic',Jamaica,Japan,Kazakhstan,'Sri Lanka',Syria,Taiwan,Cyprus,'Korea South',Moldova,Thailand,Morocco,Vietnam,Armenia,Bolivia,'Bosnia Herzegovina','Costa Rica',Jordan,Macedonia,Malta,Nepal,'Trinidad & Tobago',Montenegro,Chile,Kyrgyzstan,Mongolia,Algeria,Bhutan,Cambodia,'Congo {Democratic Rep}',Gabon,Lebanon,Nicaragua,Swaziland,Mauritius,'Antigua & Deps',Laos,Qatar,Afghanistan,Ethiopia,'El Salvador',Bahrain,Albania,Uzbekistan,Liechtenstein,Mauritania,'San Marino',Iraq,Sudan,Zimbabwe,Uganda,Ghana,Honduras,Tanzania,Senegal,Luxembourg,Barbados,Kuwait,Panama,Benin,Botswana,Azerbaijan,Madagascar,Zambia,Cuba,'South Sudan',Cameroon,'Solomon Islands',Oman,Kosovo,Namibia,Turkmenistan,Somalia,Mozambique,Tajikistan,Togo,Andorra,'Sierra Leone','Korea North',Bahamas,Maldives,Rwanda,Angola,'Vatican City',Brunei,Burkina,Djibouti,Haiti,Vanuatu}
        attValues[0]=data.attribute("Country").indexOfValue(Country);
        
        String Age = cb_age.getSelectedItem().toString();//{25-29,20-24,30-34,35-39,'< 20',40-50,51-60,'> 60'}
        attValues[1]=data.attribute("Age").indexOfValue(Age);
        String Gender = cb_gender.getSelectedItem().toString();//{Male,Female}
        attValues[2]=data.attribute("Gender").indexOfValue(Gender);
        String Years_IT = cb_ITyears.getSelectedItem().toString();//{'2 - 5 years','1 - 2 years','6 - 10 years','11+ years','Less than 1 year'}
        attValues[3]=data.attribute("Years IT / Programming Experience").indexOfValue(Years_IT);
        String Occupation = cb_Occ.getSelectedItem().toString();//{'Back-end web developer','Business intelligence or data warehousing expert','Data scientist','Database administrator',Designer,'Desktop developer','Developer with a statistics or mathematics background',DevOps,'Embedded application developer','Enterprise level services developer','Executive (VP of Eng.- CTO- CIO- etc.)','Front-end web developer','Full-stack web developer','Graphics programmer','Growth hacker','Machine learning developer','Mobile developer','Mobile developer - Android','Mobile developer - iOS','Mobile developer - Windows Phone','Product manager','Quality Assurance',Student,'System administrator'}
        attValues[4]=data.attribute("Occupation").indexOfValue(Occupation);
        String Android = ck_android.isSelected() ? "yes" : "no";//{no,yes}
        attValues[5]=data.attribute("Android").indexOfValue(Android);
        String Arduino = ck_Arduino.isSelected() ? "yes" : "no";//{no,yes}
        attValues[6]=data.attribute("Arduino / Raspberry Pi").indexOfValue(Arduino);
        String AngularJS = ck_angular.isSelected() ? "yes" : "no";//{no,yes}
        attValues[7]=data.attribute("AngularJS").indexOfValue(AngularJS);
        String C = ck_c.isSelected() ? "yes" : "no";//{no,yes}
        attValues[8]=data.attribute("C").indexOfValue(C);
        String Cpp = ck_cpp.isSelected() ? "yes" : "no";//{no,yes}
        attValues[9]=data.attribute("C++").indexOfValue(Cpp);
        String Cpp11 = ck_cpp11.isSelected() ? "yes" : "no";//{no,yes}
        attValues[10]=data.attribute("C++11").indexOfValue(Cpp11);
        String Cs = ck_cs.isSelected() ? "yes" : "no";//{no,yes}
        attValues[11]=data.attribute("C#").indexOfValue(Cs);
        String Cassandra = ck_cassandra.isSelected() ? "yes" : "no";//{no,yes}
        attValues[12]=data.attribute("Cassandra").indexOfValue(Cassandra);
        String CoffeeScript = ck_coffeeScript.isSelected() ? "yes" : "no";// {no,yes}
        attValues[13]=data.attribute("CoffeeScript").indexOfValue(CoffeeScript);
        String Cordova = ck_Cordova.isSelected() ? "yes" : "no";//{no,yes}
        attValues[14]=data.attribute("Cordova").indexOfValue(Cordova);
        String Clojure = ck_Clojure.isSelected() ? "yes" : "no";//{no,yes}
        attValues[15]=data.attribute("Clojure").indexOfValue(Clojure);
        String Cloud = ck_cloud.isSelected() ? "yes" : "no";//{no,yes}
        attValues[16]=data.attribute("Cloud (AWS- GAE- Azure- etc.)").indexOfValue(Cloud);
        String Dart = ck_dart.isSelected() ? "yes" : "no";//{no,yes}
        attValues[17]=data.attribute("Dart").indexOfValue(Dart);
        String Fs = ck_Fs.isSelected() ? "yes" : "no";//{no,yes}
        attValues[18]=data.attribute("F#").indexOfValue(Fs);
        String Go = ck_go.isSelected() ? "yes" : "no";//{no,yes}
        attValues[19]=data.attribute("Go").indexOfValue(Go);
        String Hadoop = ck_hadoop.isSelected() ? "yes" : "no";//{no,yes}
        attValues[20]=data.attribute("Hadoop").indexOfValue(Hadoop);
        String Haskell = ck_haskell.isSelected() ? "yes" : "no";//{no,yes}
        attValues[21]=data.attribute("Haskell").indexOfValue(Haskell);
        String iOS = ck_ios.isSelected() ? "yes" : "no";//{no,yes}
        attValues[22]=data.attribute("iOS").indexOfValue(iOS);
        String Java = ck_java.isSelected() ? "yes" : "no";//{yes,no}
        attValues[23]=data.attribute("Java").indexOfValue(Java);
        String JavaScript = ck_javaScript.isSelected() ? "yes" : "no";//{no,yes}
        attValues[24]=data.attribute("JavaScript").indexOfValue(JavaScript);
        String LAMP = ck_lamp.isSelected() ? "yes" : "no";//{no,yes}
        attValues[25]=data.attribute("LAMP").indexOfValue(LAMP);
        String Matlab = ck_matlab.isSelected() ? "yes" : "no";//{no,yes}
        attValues[26]=data.attribute("Matlab").indexOfValue(Matlab);
        String MongoDB = ck_mongoDB.isSelected() ? "yes" : "no";//{no,yes}
        attValues[27]=data.attribute("MongoDB").indexOfValue(MongoDB);
        String Nodejs = ck_nodejs.isSelected() ? "yes" : "no";//{no,yes}
        attValues[28]=data.attribute("Node.js").indexOfValue(Nodejs);
        String Objective_C = ck_objective_c.isSelected() ? "yes" : "no";//{no,yes}
        attValues[29]=data.attribute("Objective-C").indexOfValue(Objective_C);
        String Perl = ck_perl.isSelected() ? "yes" : "no";//{no,yes}
        attValues[30]=data.attribute("Perl").indexOfValue(Perl);
        String PHP = ck_php.isSelected() ? "yes" : "no";//{no,yes}
        attValues[31]=data.attribute("PHP").indexOfValue(PHP);
        String Python = ck_python.isSelected() ? "yes" : "no";//{no,yes}
        attValues[32]=data.attribute("Python").indexOfValue(Python);
        String R = ck_R.isSelected() ? "yes" : "no";//{no,yes}
        attValues[33]=data.attribute("R").indexOfValue(R);
        String Redis = ck_redis.isSelected() ? "yes" : "no";//{no,yes}
        attValues[34]=data.attribute("Redis").indexOfValue(Redis);
        String Ruby = ck_ruby.isSelected() ? "yes" : "no";//{no,yes}
        attValues[35]=data.attribute("Ruby").indexOfValue(Ruby);
        String Rust = ck_rust.isSelected() ? "yes" : "no";//{no,yes}
        attValues[36]=data.attribute("Rust").indexOfValue(Rust);
        String Salesforce = ck_salesforce.isSelected() ? "yes" : "no";//{no,yes}
        attValues[37]=data.attribute("Salesforce").indexOfValue(Salesforce);
        String Scala = ck_scala.isSelected() ? "yes" : "no";//{yes,no}
        attValues[38]=data.attribute("Scala").indexOfValue(Scala);
        String Sharepoint = ck_sharepoint.isSelected() ? "yes" : "no";//{no,yes}
        attValues[39]=data.attribute("Sharepoint").indexOfValue(Sharepoint);
        String Spark = ck_spark.isSelected() ? "yes" : "no";//{no,yes}
        attValues[40]=data.attribute("Spark").indexOfValue(Spark);
        String SQL = ck_sql.isSelected() ? "yes" : "no";//{no,yes}
        attValues[41]=data.attribute("SQL").indexOfValue(SQL);
        String SQL_Server = ck_sqlserver.isSelected() ? "yes" : "no";//{no,yes}
        attValues[42]=data.attribute("SQL Server").indexOfValue(SQL_Server);
        String Swift = ck_swift.isSelected() ? "yes" : "no";//{no,yes}
        attValues[43]=data.attribute("Swift").indexOfValue(Swift);
        String Visual_Basic = ck_visualBasic.isSelected() ? "yes" : "no";//{no,yes}
        attValues[44]=data.attribute("Visual Basic").indexOfValue(Visual_Basic);
        String Windows_Phone = ck_windowsPhone.isSelected() ? "yes" : "no";//{no,yes}
        attValues[45]=data.attribute("Windows Phone").indexOfValue(Windows_Phone);
        String Wordpress = ck_wordPress.isSelected() ? "yes" : "no";//{no,yes}
        attValues[46]=data.attribute("Wordpress").indexOfValue(Wordpress);
        String Employment_Status = cb_empstat.getSelectedItem().toString();//{'Employed full-time','Freelance / Contractor','Employed part-time',Retired}
        attValues[47]=data.attribute("Employment Status").indexOfValue(Employment_Status);
        String Industry = cb_industry.getSelectedItem().toString();//{Aerospace,Consulting,'Consumer Products',Defense,Education,'Finance / Banking','Foundation / Non-Profit',Gaming,Government,Healthcare,Internet,Manufacturing,'Media / Advertising','Not Currently Employed',Retail,'Software Products',Telecommunications,'Web Services'}
        attValues[48]=data.attribute("Industry").indexOfValue(Industry);
        DenseInstance instance=new DenseInstance(1.0, attValues);
        
        for(int i=0;i<49;i++)
            if(attValues[i]==-1)
                instance.setMissing(i);
        data.add(instance);
        double value=cls.classifyInstance(data.lastInstance());
        String prediction=data.classAttribute().value((int)value); 

            System.out.println("The predicted value of instance "+
                    ": "+prediction); 
            lblRes.setText("Result range salary per year is:"+prediction);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TestingForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TestingForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(TestingForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btn_runActionPerformed

    private void btn_loaddataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loaddataActionPerformed
        JFileChooser jFileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("WEKA data file", "arff");
        jFileChooser.setFileFilter(filter);
        int result = jFileChooser.showOpenDialog(new JFrame());
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jFileChooser.getSelectedFile();
            dataPath=selectedFile.getAbsolutePath();
            btn_run.setEnabled(true);
        }

    }//GEN-LAST:event_btn_loaddataActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestingForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_loaddata;
    private javax.swing.JButton btn_loadmdl;
    private javax.swing.JButton btn_run;
    private javax.swing.JComboBox cb_ITyears;
    private javax.swing.JComboBox cb_Occ;
    private javax.swing.JComboBox cb_age;
    private javax.swing.JComboBox cb_country;
    private javax.swing.JComboBox cb_empstat;
    private javax.swing.JComboBox cb_gender;
    private javax.swing.JComboBox cb_industry;
    private javax.swing.JCheckBox ck_Arduino;
    private javax.swing.JCheckBox ck_Clojure;
    private javax.swing.JCheckBox ck_Cordova;
    private javax.swing.JCheckBox ck_Fs;
    private javax.swing.JCheckBox ck_R;
    private javax.swing.JCheckBox ck_android;
    private javax.swing.JCheckBox ck_angular;
    private javax.swing.JCheckBox ck_c;
    private javax.swing.JCheckBox ck_cassandra;
    private javax.swing.JCheckBox ck_cloud;
    private javax.swing.JCheckBox ck_coffeeScript;
    private javax.swing.JCheckBox ck_cpp;
    private javax.swing.JCheckBox ck_cpp11;
    private javax.swing.JCheckBox ck_cs;
    private javax.swing.JCheckBox ck_dart;
    private javax.swing.JCheckBox ck_go;
    private javax.swing.JCheckBox ck_hadoop;
    private javax.swing.JCheckBox ck_haskell;
    private javax.swing.JCheckBox ck_ios;
    private javax.swing.JCheckBox ck_java;
    private javax.swing.JCheckBox ck_javaScript;
    private javax.swing.JCheckBox ck_lamp;
    private javax.swing.JCheckBox ck_matlab;
    private javax.swing.JCheckBox ck_mongoDB;
    private javax.swing.JCheckBox ck_nodejs;
    private javax.swing.JCheckBox ck_objective_c;
    private javax.swing.JCheckBox ck_perl;
    private javax.swing.JCheckBox ck_php;
    private javax.swing.JCheckBox ck_python;
    private javax.swing.JCheckBox ck_redis;
    private javax.swing.JCheckBox ck_ruby;
    private javax.swing.JCheckBox ck_rust;
    private javax.swing.JCheckBox ck_salesforce;
    private javax.swing.JCheckBox ck_scala;
    private javax.swing.JCheckBox ck_sharepoint;
    private javax.swing.JCheckBox ck_spark;
    private javax.swing.JCheckBox ck_sql;
    private javax.swing.JCheckBox ck_sqlserver;
    private javax.swing.JCheckBox ck_swift;
    private javax.swing.JCheckBox ck_visualBasic;
    private javax.swing.JCheckBox ck_windowsPhone;
    private javax.swing.JCheckBox ck_wordPress;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblModelName;
    private javax.swing.JLabel lblRes;
    // End of variables declaration//GEN-END:variables
}
