/*
 * This class is an entity class generated by NetBeans's Hibernate plugin.
 * It represents a table in the database. Phrase table.
 */
package plagiarism.util.pojos;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.IndexColumn;

/**
 * <h2>Phrase POJO</h2>
 * <p>
 * This class is a POJO representing an entity in the database generated by
 * NetBeans' Hibernate plugin</p>
 *
 * @author Ali Wassouf
 * @version 1.0
 * @since 2016-04-10
 */
@Entity
@Table(name = "PHRASE")
public class Phrase implements Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "ID", nullable = false, unique = true)
    private int id;

    @Column(name = "PATHNAME")
    private String pathname;

    @Column(name = "FILENAME")
    private String filename;

    @Column(name = "ORIGINAL")
    private String original;
    
    @Column(name = "TOKENS")
    private String tokens;

    @OneToMany(cascade = CascadeType.ALL, mappedBy = "phrase")
    private Set<Assoc> associations = new HashSet<Assoc>(0);
    
    @ManyToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "SOURCE_DOC_ID")
    private Source_doc source_doc;

//    @OneToMany(cascade = CascadeType.ALL)
//    @JoinColumn(name = "id")
//    @IndexColumn(name = "idx")
//    private List<Token> tokens = new ArrayList<Token>(0);

    /**
     * Default constructor.
     */
    public Phrase() {
    }

    /**
     * Overloaded constructor with parameters. Does not take <b>id</b>
     * parameter.
     *
     * @param pathname the path where the file containing the phrase is located
     * @param filename the file containing the phrase.
     * @param original the phrase as it was extracted from the file.
     * @param tokens the tokens contained in the phrase.
     */
    public Phrase(String pathname, String filename, String original, String tokens, Source_doc source_doc) {

        this.pathname = pathname;
        this.filename = filename;
        this.original = original;
        this.tokens = tokens;
        this.source_doc = source_doc;
    }

    /**
     * Overloaded constructor with parameters.
     *
     * @param id
     * @param pathname the path where the file containing the phrase is located
     * @param filename the file containing the phrase.
     * @param original the phrase as it was extracted from the file.
     * @param tokens the tokens contained in the phrase.
     */
    public Phrase(int id, String pathname, String filename, String original, String tokens, Source_doc source_doc) {
        this.id = id;
        this.pathname = pathname;
        this.filename = filename;
        this.original = original;
        this.tokens = tokens; 
        this.source_doc = source_doc;
        
    }

    /**
     * Adds an Association instance to the Set of Associations
     *
     * @param assoc instance of type Association
     */
    public void addAssociation(Assoc assoc) {
        this.associations.add(assoc);
    }

    /**
     * Setter for the <b>id</b> parameter.
     *
     * @param id
     */
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Setter for the <b>pathname</b> parameter.
     *
     * @param pathname
     */
    public void setPathname(String pathname) {
        this.pathname = pathname;
    }

    /**
     * Setter of the <b>filename</b> parameter.
     *
     * @param filename
     */
    public void setFilename(String filename) {
        this.filename = filename;
    }

    /**
     * Setter of the <b>original</b> parameter.
     *
     * @param original
     */
    public void setOriginal(String original) {
        this.original = original;
    }

    /**
     * Setter of the <b>tokens</b> parameter.
     *
     * @param tokens
     */
    public void setTokens(String tokens) {
           this.tokens = tokens;
    }

    /**
     * Setter of the <b>associations</b> parameter which represent a set of
     * Association instances.
     *
     * @param associations
     */
    public void setAssociations(Set<Assoc> associations) {
        this.associations = associations;
    }

    /**
     * Getter of the <b>id</b> parameter
     *
     * @return int id
     */
    public int getId() {
        return id;
    }

    /**
     * Getter of the <b>pathname</b> parameter
     *
     * @return String pathname.
     */
    public String getPathname() {
        return pathname;
    }

    /**
     * Getter of the <b>filename</b> parameter
     *
     * @return String filename.
     */
    public String getFilename() {
        return filename;
    }

    /**
     * Getter of the <b>original</b> parameter
     *
     * @return String original
     */
    public String getOriginal() {
        return original;
    }

    /**
     * Getter of the <b>tokens</b> parameter
     *
     * @return List<Token>
     */
    
    public String getTokens(){
        return tokens;
    }
    /**
     * Getter of the <b>associations</b> parameter
     *
     * @return Set of Assoc associations
     */
    public Set<Assoc> getAssociations() {
        return associations;
    }

    public Source_doc getSource_doc() {
        return source_doc;
    }

    public void setSource_doc(Source_doc source_doc) {
        this.source_doc = source_doc;
    }
    
    

}
