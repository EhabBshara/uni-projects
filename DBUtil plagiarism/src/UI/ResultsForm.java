/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import com.alee.laf.WebLookAndFeel;
import java.awt.Color;
import java.awt.Component;
import java.awt.ComponentOrientation;
import java.util.ArrayList;
import java.util.List;
import javafx.util.Pair;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author dali
 */
public class ResultsForm extends javax.swing.JFrame {

    /**
     * Creates new form AboutUsform
     */
    public ResultsForm() {
        initComponents();
    }


    public void setUrlsite(String urlsite) {
        lbl_link.setEnabled(true);
        lbl_link.setLink(urlsite);
    }
    
    public void viewResults(List<Pair<String, String>> sentences) {
        MyModel model = new MyModel(sentences);

        tbl_results.setModel(model);
        
//        tbl_results.updateUI();
//        tbl_results.setDefaultRenderer(String.class, new MyCellRenderer());
        MyCellRenderer c=new MyCellRenderer();
        
        tbl_results.setRowHeight(this.jScrollPane2.getHeight());
        tbl_results.getColumnModel().getColumn(1).setCellRenderer(c);
        tbl_results.getColumnModel().getColumn(2).setCellRenderer(c);

        int size=(tbl_results.getWidth()-50)/2;
        tbl_results.getColumnModel().getColumn(0).setPreferredWidth(50);
        tbl_results.getColumnModel().getColumn(1).setPreferredWidth(size);
        tbl_results.getColumnModel().getColumn(2).setPreferredWidth(size);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_results = new com.alee.laf.table.WebTable();
        lbl_link = new com.alee.extended.label.WebLinkLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Plagiarism Results");
        setAlwaysOnTop(true);
        setLocationByPlatform(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                windowResizedHandler(evt);
            }
        });

        tbl_results.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_results.setToolTipText("");
        jScrollPane2.setViewportView(tbl_results);

        lbl_link.setText("  ");
        lbl_link.setToolTipText("");
        lbl_link.setEnabled(false);
        lbl_link.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_link, javax.swing.GroupLayout.PREFERRED_SIZE, 871, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 16, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_link, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void windowResizedHandler(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_windowResizedHandler
        // TODO add your handling code here:
        tbl_results.setRowHeight(this.jScrollPane2.getHeight());
        int size=(tbl_results.getWidth()-50)/2;
        tbl_results.getColumnModel().getColumn(0).setPreferredWidth(50);
        tbl_results.getColumnModel().getColumn(1).setPreferredWidth(size);
        tbl_results.getColumnModel().getColumn(2).setPreferredWidth(size);
    }//GEN-LAST:event_windowResizedHandler

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                WebLookAndFeel.install();
                ResultsForm f = new ResultsForm();
                f.setVisible(true);
                List<Pair<String, String>> list = new ArrayList();
                list.add(new Pair("يبيسبتكسشمنبت \n يبسكتشبكميسنتبسمنكت\nمنتيبسشكمبتس \n طينبتشست \nمنتبيشسكمنبتسشيكبمنتشسيكبمنتسشبمكتسشب مينسبت سشكمب تمشس تبشس كمب", "بمنيسشت بكمينسشت بمنس ب\nيمنبت سشمنبت مسينب\n مكينبت يشسمكبنت ش\n يبمنسش تب سشمنيتب شسم\nيمبتنضخهقعب منىؤر رمنيت منؤتيسش بمسينت رلايسشتاب ص\nي بشس باصضكخ ريسشر يسكخ"));
                list.add(new Pair("يبيسب33332222222222222222222تكسشمنبت \n يبسكتشبكميسنتبسمنكت\nمنتيبسشكمبتس \n طينبتشست \nمنتبيشسكمنبتسشيكبمنتشسيكبمنتسشبمكتسشب مينسبت سشكمب تمشس تبشس كمب", "بمنيسشت بكمينسشت بمنس ب\nيمنبت سشمنبت مسينب\n مكينبت يشسمكبنت ش\n يبمنسش تب سشمنيتب شسم\nيمبتنضخهقعب منىؤر رمنيت منؤتيسش بمسينت رلايسشتاب ص\nي بشس باصضكخ ريسشر يسكخ"));
                list.add(new Pair("يبيسبتكسشمنبت \n يبسكتشبكميسن33333333333تبسمنكت\nمنتيبسشكمبتس \n طينبتشست \nمنتبيشسكمنبdsds12321تسشيكبمنتشسيكبمنتسشبمكتسشب مينسبت سشكمب تمشس تبشس كمب", "بمنيسشت بكمينسشت بمنس ب\nيمنبت سشمنبت مسينب\n مكينبت يشسمكبنت ش\n يبمنسش تب سشمنيتب شسم\nيمبتنضخهقعب منىؤر رمنيت منؤتيسش بمسينت رلايسشتاب ص\nي بشس باصضكخ ريسشر يسكخ"));
                list.add(new Pair("يبيسبتكسشمنبت \n يبسكتشبك122222222222ميسنتبسمنكت\nمنتيبسشكمبتس \n طينبتشست \nمنتبيشسكمنبتسشيكبمنتشسيكبمنتسشبمكتسشب مينسبت سشكمب تمشس تبشس كمب", "بمنيسشت بكمينسشت بمنس ب\nيمنبت سشمنبت مسينب\n مكينبت يشسمكبنت ش\n يبمنسش تب سشمنيتب شسم\nيمبتنضخهقعب منىؤر رمنيت منؤتيسش بمسينت رلايسشتاب ص\nي بشس باصضكخ ريسشر يسكخ"));
                list.add(new Pair("يبيسبتك3232323232سشمنبت \n يبسكتشبكميسنتبسمنكت\nمنتيبسشكمبتس \n طينبتشست \nمنتبيشسكمنبتسشيكبمنتشسيكبمنتسشبمكتسشب مينسبت سشكمب تمشس تبشس كمب", "بمنيسشت بكمينسشت بمنس ب\nيمنبت سشمنبت مسينب\n مكينبت يشسمكبنت ش\n يبمنسش تب سشمنيتب شسم\nيمبتنضخهقعب منىؤر رمنيت منؤتيسش بمسينت رلايسشتاب ص\nي بشس باصضكخ ريسشر يسكخ"));
                list.add(new Pair("يبيسبتكسشمنبت \n يبسكت111111111111111111111111111111111111111شبكميسنتبسمنكت\nمنتيبسشكمبتس \n طينبتشست \nمنتبيشسكمنبتسشيكبمنتشسيكبمنتسشبمكتسشب مينسبت سشكمب تمشس تبشس كمب", "بمنيسشت بكمينسشت بمنس ب\nيمنبت سشمنبت مسينب\n مكينبت يشسمكبنت ش\n يبمنسش تب سشمنيتب شسم\nيمبتنضخهقعب منىؤر رمنيت منؤتيسش بمسينت رلايسشتاب ص\nي بشس باصضكخ ريسشر يسكخ"));
                list.add(new Pair("يبيسبتكسشمنبت \n يبسكتشبك32111111111ميسنتبسمنكت\nمنتيبسشكمبتس \n طينبتشست \nمنتبيشسكمنبتسشيكبمنتشسيكبمنتسشبمكتسشب مينسبت سشكمب تمشس تبشس كمب", "بمنيسشت بكمينسشت بمنس ب\nيمنبت سشمنبت مسينب\n مكينبت يشسمكبنت ش\n يبمنسش تب سشمنيتب شسم\nيمبتنضخهقعب منىؤر رمنيت منؤتيسش بمسينت رلايسشتاب ص\nي بشس باصضكخ ريسشر يسكخ"));
//                list.add(new Pair("sadsadfsakfja;sfj;\n fadjfasldkf\nfdafasfs\nfdafa\n", "fdasfaesf\nadfa\nadfeeeeeeeeeeeafd\nadfds\n"));
//                list.add(new Pair("sadsadfsakfja;sfj;\n fadjfasldkf\nfdassssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssfasfs\nfdafa\n", "fdasfasf\nadfa\nadfafd\nadfds\n"));
//                list.add(new Pair("sadsadfsakfja;sfj;\n fadjfasldkf\nfdafasfs\nfdafa\n", "fdasfasf\naeeeeeeeeeedfa\nadfafd\nadfds\n"));
//                list.add(new Pair("sadsadfsakfja;sfj;\n fadjfasldkf\nfdafasfs\nfdafa\n", "fdasfasf\naeeeeeessssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssseeeedfa\nadfafd\nadfds\n"));
                f.viewResults(list);
                
            }
        });
    }

    class MyModel extends AbstractTableModel {

        private final String[] columnNames = {"#","Source sentences", "Suspicious sentences"};
        private final List<Pair<String, String>> list;

        private MyModel() {
            list = new ArrayList();
        }

        public MyModel(List<Pair<String, String>> list) {
            this.list = list;
        }

        public void addElement(Pair<String, String> e) {
            // Adds the element in the last position in the list
            list.add(e);
            fireTableRowsInserted(list.size() - 1, list.size() - 1);
        }

        @Override
        public String getColumnName(int column) {
            return columnNames[column];
        }

        @Override
        public int getColumnCount() {
            return columnNames.length;
        }

        @Override
        public int getRowCount() {
            return list.size();
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            switch (columnIndex) {
                case 0:
                    return rowIndex+1+"";
                case 1:
                    return list.get(rowIndex).getKey();
                case 2:
                    return list.get(rowIndex).getValue();
            }
            return null;
        }

    }

    class MyCellRenderer extends JTextArea implements TableCellRenderer {

        public MyCellRenderer() {
            setLineWrap(true);
            setWrapStyleWord(true);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table,
                Object value, boolean isSelected, boolean hasFocus, int row,
                int column) {

            setText((String) value);

//            int height_wanted = 77;//(int) getPreferredSize().getHeight();
//            if (height_wanted != table.getRowHeight(row)) {
//                table.setRowHeight(row, height_wanted);
//            }
            this.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
            return this;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private com.alee.extended.label.WebLinkLabel lbl_link;
    private com.alee.laf.table.WebTable tbl_results;
    // End of variables declaration//GEN-END:variables
}
