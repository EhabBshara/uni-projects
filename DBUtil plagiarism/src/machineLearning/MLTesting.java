/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package machineLearning;

import arabicTools.Stem;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javafx.util.Pair;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;
import plagiarism.DAOImpl.GenericServiceImpl;
import plagiarism.IDAO.IGenericService;
import plagiarism.util.pojos.Annotation;
import plagiarism.util.pojos.HibernateUtil;
import weka.classifiers.functions.LibSVM;

/**
 *
 * @author dali
 */
public class MLTesting extends javax.swing.JFrame {

    /**
     * Creates new form MLTesting
     */
    public MLTesting() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_trainSet = new javax.swing.JButton();
        lbl_trainset = new javax.swing.JLabel();
        btn_testSet = new javax.swing.JButton();
        lbl_testset = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_annotationId = new javax.swing.JTextField();
        btn_Run = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtA_result = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lbl_status = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MachineLearning Test");

        btn_trainSet.setText("Training set");
        btn_trainSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_trainSetActionPerformed(evt);
            }
        });

        lbl_trainset.setText("TrainSet:");

        btn_testSet.setText("Testing unit");
        btn_testSet.setEnabled(false);
        btn_testSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_testSetActionPerformed(evt);
            }
        });

        lbl_testset.setText("TestSet");

        jLabel3.setText("Annotation index");

        txt_annotationId.setText("25");

        btn_Run.setText("Run");
        btn_Run.setEnabled(false);
        btn_Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RunActionPerformed(evt);
            }
        });

        txtA_result.setColumns(20);
        txtA_result.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        txtA_result.setRows(5);
        jScrollPane1.setViewportView(txtA_result);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("results:");

        jLabel1.setText("status:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btn_trainSet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_testSet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lbl_trainset, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                                .addComponent(lbl_testset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_annotationId, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(btn_Run, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_status, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_trainSet)
                            .addComponent(lbl_trainset))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_testSet)
                            .addComponent(lbl_testset))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_annotationId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btn_Run, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(lbl_status))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String testpath = null;
    String dataPath = null;

    private void btn_trainSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_trainSetActionPerformed
        JFileChooser jFileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("WEKA data", "arff");
        jFileChooser.setFileFilter(filter);
        int result = jFileChooser.showOpenDialog(new JFrame());
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jFileChooser.getSelectedFile();
            dataPath = selectedFile.getAbsolutePath();
            btn_testSet.setEnabled(true);
            lbl_trainset.setText("trainSet: " + selectedFile.getName());
        }
    }//GEN-LAST:event_btn_trainSetActionPerformed

    private void btn_testSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_testSetActionPerformed
        JFileChooser jFileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("WEKA data", "arff");
        jFileChooser.setFileFilter(filter);
        int result = jFileChooser.showOpenDialog(new JFrame());
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jFileChooser.getSelectedFile();
            testpath = selectedFile.getAbsolutePath();
            btn_Run.setEnabled(true);
            lbl_testset.setText("testSet: " + selectedFile.getName());
        }
    }//GEN-LAST:event_btn_testSetActionPerformed

    private void btn_RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RunActionPerformed
        new Thread(new Runnable() {

            @Override
            public void run() {
                lbl_status.setText("training svm");
                LibSVM svm = SVMTrainer.trainSVM(dataPath);

                IGenericService<Annotation> annotationService
                        = new GenericServiceImpl<>(Annotation.class, HibernateUtil.getSessionFactory());
                lbl_status.setText("finding annotation");
                List<Annotation> a = annotationService.getAll();
                
                int index = Integer.parseInt(txt_annotationId.getText().toString());
                List<CandidateSentencesWithOriginal> candidateSentences = new ArrayList<>();
                Stem stemmer = new Stem();
                lbl_status.setText("Preprocessing files");
                candidateSentences.addAll(PhaseI.getCandidateSentencesWithOriginal(a.get(index), stemmer));
                lbl_status.setText("extracting features");
                for (int i = 0; i < candidateSentences.size(); i++) {
                    candidateSentences.get(i).setFeatures(PhaseI.extractFeature(candidateSentences.get(i).source, candidateSentences.get(i).suspicious));
                }
                lbl_status.setText("writing model results");
                List<Pair<String, String>> outList = SVMTrainer.printOutput(svm, candidateSentences, dataPath);
                String output = "";
                for (Pair<String, String> pair : outList) {
                    output += pair.getKey() + "\n" + pair.getValue() + "\n" + "-----------------------------------------------\n";
                }
                txtA_result.setText(output);
                lbl_status.setText("finished");
            }
        }).start();

    }//GEN-LAST:event_btn_RunActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MLTesting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MLTesting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MLTesting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MLTesting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MLTesting().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Run;
    private javax.swing.JButton btn_testSet;
    private javax.swing.JButton btn_trainSet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_status;
    private javax.swing.JLabel lbl_testset;
    private javax.swing.JLabel lbl_trainset;
    private javax.swing.JTextArea txtA_result;
    private javax.swing.JTextField txt_annotationId;
    // End of variables declaration//GEN-END:variables
}
